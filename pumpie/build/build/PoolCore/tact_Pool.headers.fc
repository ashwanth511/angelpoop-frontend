;;
;; Header files for Pool
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_cell
(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_get_slice_cell
cell __tact_dict_get_slice_cell(cell d, int kl, slice k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $PoolBuy$_load
(slice, ((slice, int))) $PoolBuy$_load(slice sc_0) inline;

;; $PoolSell$_load
(slice, ((slice, slice, int))) $PoolSell$_load(slice sc_0) inline;

;; $AddJetton$_load
(slice, ((slice))) $AddJetton$_load(slice sc_0) inline;

;; $JettonPool$_store
builder $JettonPool$_store(builder build_0, (int, int) v) inline;

;; $JettonPool$_store_cell
cell $JettonPool$_store_cell((int, int) v) inline;

;; $JettonPool$_load
(slice, ((int, int))) $JettonPool$_load(slice sc_0) inline;

;; $JettonPool$_as_optional
tuple $JettonPool$_as_optional((int, int) v) inline;

;; $JettonPool$_load_opt
tuple $JettonPool$_load_opt(cell cl) inline;

;; $Pool$_store
builder $Pool$_store(builder build_0, (slice, cell) v) inline;

;; $Pool$_load
(slice, ((slice, cell))) $Pool$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $JettonPool$_get_balance
_ $JettonPool$_get_balance((int, int) v) inline;

;; $JettonPool$_get_isActive
_ $JettonPool$_get_isActive((int, int) v) inline;

;; $JettonPool$_not_null
((int, int)) $JettonPool$_not_null(tuple v) inline;

;; $Pool$_contract_init
(slice, cell) $Pool$_contract_init() impure inline_ref;

;; $Pool$_contract_load
(slice, cell) $Pool$_contract_load() impure inline_ref;

;; $Pool$_contract_store
() $Pool$_contract_store((slice, cell) v) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Pool$_fun_getJettonLiquidity
((slice, cell), int) $Pool$_fun_getJettonLiquidity((slice, cell) $self, slice $jettonAddress) impure inline_ref;

;; $Pool$_fun_hasPool
((slice, cell), int) $Pool$_fun_hasPool((slice, cell) $self, slice $jettonAddress) impure inline_ref;

;; $JettonPool$_constructor_balance_isActive
((int, int)) $JettonPool$_constructor_balance_isActive(int $balance, int $isActive) inline;

;; $SendParameters$_constructor_to_value_bounce
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce(slice $to, int $value, int $bounce) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $Pool$_fun_forward
((slice, cell), ()) $Pool$_fun_forward((slice, cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $Pool$_fun_notify
((slice, cell), ()) $Pool$_fun_notify((slice, cell) $self, cell $body) impure inline;

;; $Pool$_fun_owner
((slice, cell), slice) $Pool$_fun_owner((slice, cell) $self) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
